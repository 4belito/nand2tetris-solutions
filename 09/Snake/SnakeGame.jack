class SnakeGame {
   field Snake snake; // the snake of this game
   field int direction; // the snake's current direction: 
                        // 0=none, 1=up, 2=down, 3=left, 4=right

   /** Constructs a new snake game. */
   constructor SnakeGame new() {
        // The initial snake is located in (0,0), has size 30, and is not moving.
        var Array asnake;
        var int alength,i;
        let alength = 10;   // initial length = 10 segments
        let asnake = Array.new(2*alength); // initial length = 10 segments (20 coordinates)
        let i = 0;
        while (i < alength) {
            let asnake[i * 2] = i;     // x-coordinate
            let asnake[(i * 2) + 1] = 0; // y-coordinate
            let i = i + 1;
        }
        let snake = Snake.new(asnake, alength);
        let direction = 2; // initial direction = down
        return this;
   }

   /** Disposes this game. */
   method void dispose() {
      do snake.dispose();
      do Memory.deAlloc(this);
      return;
   }

   /** Moves the snake in the current direction. */
   method void moveSnake() {
      if (direction = 1) { do snake.move(0, -1); }
      if (direction = 2) { do snake.move(0, 1); }
      if (direction = 3) { do snake.move(-1, 0); }
      if (direction = 4) { do snake.move(1, 0); }
      do Sys.wait(5);  // delays the next movement
      return;
   }

   /** Runs the game: handles the user's inputs and moves the snake accordingly */
   method void run() {
      var char key;  // the key currently pressed by the user
      var boolean exit;
      let exit = false;
      
      while (~exit) {
         // waits for a key to be pressed
         while (key = 0) {
            let key = Keyboard.keyPressed();
            do moveSnake();
         }
         if (key = 81)  { let exit = true; }     // q key
         if (key = 131) { let direction = 1; }   // up arrow
         if (key = 133) { let direction = 2; }   // down arrow
         if (key = 130) { let direction = 3; }   // left arrow
         if (key = 132) { let direction = 4; }   // right arrow

         // waits for the key to be released
         while (~(key = 0)) {
            let key = Keyboard.keyPressed();
            do moveSnake();
         }
     } // while
     return;
   }
}
