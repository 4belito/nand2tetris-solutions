<class>
  <keyword> class </keyword>
  <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Square </identifier>
  <symbol> { </symbol>
  <classVarDec>
    <keyword> field </keyword>
    <keyword> int </keyword>
    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
    <symbol> , </symbol>
    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
    <symbol> ; </symbol>
  </classVarDec>
  <classVarDec>
    <keyword> field </keyword>
    <keyword> int </keyword>
    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
    <symbol> ; </symbol>
  </classVarDec>
  <subroutineDec>
    <keyword> constructor </keyword>
    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Square </identifier>
    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> new </identifier>
    <symbol> ( </symbol>
    <parameterList>
      <keyword> int </keyword>
      <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Ax </identifier>
      <symbol> , </symbol>
      <keyword> int </keyword>
      <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Ay </identifier>
      <symbol> , </symbol>
      <keyword> int </keyword>
      <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Asize </identifier>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <statements>
        <letStatement>
          <keyword> let </keyword>
          <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
          <symbol> = </symbol>
          <expression>
            <term>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Ax </identifier>
            </term>
          </expression>
          <symbol> ; </symbol>
        </letStatement>
        <letStatement>
          <keyword> let </keyword>
          <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
          <symbol> = </symbol>
          <expression>
            <term>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Ay </identifier>
            </term>
          </expression>
          <symbol> ; </symbol>
        </letStatement>
        <letStatement>
          <keyword> let </keyword>
          <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
          <symbol> = </symbol>
          <expression>
            <term>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Asize </identifier>
            </term>
          </expression>
          <symbol> ; </symbol>
        </letStatement>
        <doStatement>
          <keyword> do </keyword>
          <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> draw </identifier>
          <symbol> ( </symbol>
          <expressionList>
          </expressionList>
          <symbol> ) </symbol>
          <symbol> ; </symbol>
        </doStatement>
        <returnStatement>
          <keyword> return </keyword>
          <expression>
            <term>
              <keyword> this </keyword>
            </term>
          </expression>
          <symbol> ; </symbol>
        </returnStatement>
      </statements>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword> method </keyword>
    <keyword> void </keyword>
    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> dispose </identifier>
    <symbol> ( </symbol>
    <parameterList>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <statements>
        <doStatement>
          <keyword> do </keyword>
          <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Memory </identifier>
          <symbol> . </symbol>
          <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> deAlloc </identifier>
          <symbol> ( </symbol>
          <expressionList>
            <expression>
              <term>
                <keyword> this </keyword>
              </term>
            </expression>
          </expressionList>
          <symbol> ) </symbol>
          <symbol> ; </symbol>
        </doStatement>
        <returnStatement>
          <keyword> return </keyword>
          <symbol> ; </symbol>
        </returnStatement>
      </statements>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword> method </keyword>
    <keyword> void </keyword>
    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> draw </identifier>
    <symbol> ( </symbol>
    <parameterList>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <statements>
        <doStatement>
          <keyword> do </keyword>
          <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Screen </identifier>
          <symbol> . </symbol>
          <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> setColor </identifier>
          <symbol> ( </symbol>
          <expressionList>
            <expression>
              <term>
                <keyword> true </keyword>
              </term>
            </expression>
          </expressionList>
          <symbol> ) </symbol>
          <symbol> ; </symbol>
        </doStatement>
        <doStatement>
          <keyword> do </keyword>
          <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Screen </identifier>
          <symbol> . </symbol>
          <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> drawRectangle </identifier>
          <symbol> ( </symbol>
          <expressionList>
            <expression>
              <term>
                <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
              </term>
            </expression>
            <symbol> , </symbol>
            <expression>
              <term>
                <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
              </term>
            </expression>
            <symbol> , </symbol>
            <expression>
              <term>
                <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
              </term>
              <symbol> + </symbol>
              <term>
                <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
              </term>
            </expression>
            <symbol> , </symbol>
            <expression>
              <term>
                <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
              </term>
              <symbol> + </symbol>
              <term>
                <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
              </term>
            </expression>
          </expressionList>
          <symbol> ) </symbol>
          <symbol> ; </symbol>
        </doStatement>
        <returnStatement>
          <keyword> return </keyword>
          <symbol> ; </symbol>
        </returnStatement>
      </statements>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword> method </keyword>
    <keyword> void </keyword>
    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> erase </identifier>
    <symbol> ( </symbol>
    <parameterList>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <statements>
        <doStatement>
          <keyword> do </keyword>
          <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Screen </identifier>
          <symbol> . </symbol>
          <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> setColor </identifier>
          <symbol> ( </symbol>
          <expressionList>
            <expression>
              <term>
                <keyword> false </keyword>
              </term>
            </expression>
          </expressionList>
          <symbol> ) </symbol>
          <symbol> ; </symbol>
        </doStatement>
        <doStatement>
          <keyword> do </keyword>
          <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Screen </identifier>
          <symbol> . </symbol>
          <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> drawRectangle </identifier>
          <symbol> ( </symbol>
          <expressionList>
            <expression>
              <term>
                <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
              </term>
            </expression>
            <symbol> , </symbol>
            <expression>
              <term>
                <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
              </term>
            </expression>
            <symbol> , </symbol>
            <expression>
              <term>
                <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
              </term>
              <symbol> + </symbol>
              <term>
                <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
              </term>
            </expression>
            <symbol> , </symbol>
            <expression>
              <term>
                <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
              </term>
              <symbol> + </symbol>
              <term>
                <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
              </term>
            </expression>
          </expressionList>
          <symbol> ) </symbol>
          <symbol> ; </symbol>
        </doStatement>
        <returnStatement>
          <keyword> return </keyword>
          <symbol> ; </symbol>
        </returnStatement>
      </statements>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword> method </keyword>
    <keyword> void </keyword>
    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> incSize </identifier>
    <symbol> ( </symbol>
    <parameterList>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <statements>
        <ifStatement>
          <keyword> if </keyword>
          <symbol> ( </symbol>
          <expression>
            <term>
              <symbol> ( </symbol>
              <expression>
                <term>
                  <symbol> ( </symbol>
                  <expression>
                    <term>
                      <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
                    </term>
                    <symbol> + </symbol>
                    <term>
                      <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                    </term>
                  </expression>
                  <symbol> ) </symbol>
                </term>
                <symbol> &lt; </symbol>
                <term>
                  <integerConstant> 254 </integerConstant>
                </term>
              </expression>
              <symbol> ) </symbol>
            </term>
            <symbol> &amp; </symbol>
            <term>
              <symbol> ( </symbol>
              <expression>
                <term>
                  <symbol> ( </symbol>
                  <expression>
                    <term>
                      <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
                    </term>
                    <symbol> + </symbol>
                    <term>
                      <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                    </term>
                  </expression>
                  <symbol> ) </symbol>
                </term>
                <symbol> &lt; </symbol>
                <term>
                  <integerConstant> 510 </integerConstant>
                </term>
              </expression>
              <symbol> ) </symbol>
            </term>
          </expression>
          <symbol> ) </symbol>
          <symbol> { </symbol>
          <statements>
            <doStatement>
              <keyword> do </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> erase </identifier>
              <symbol> ( </symbol>
              <expressionList>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
            <letStatement>
              <keyword> let </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
              <symbol> = </symbol>
              <expression>
                <term>
                  <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                </term>
                <symbol> + </symbol>
                <term>
                  <integerConstant> 2 </integerConstant>
                </term>
              </expression>
              <symbol> ; </symbol>
            </letStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> draw </identifier>
              <symbol> ( </symbol>
              <expressionList>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
          </statements>
          <symbol> } </symbol>
        </ifStatement>
        <returnStatement>
          <keyword> return </keyword>
          <symbol> ; </symbol>
        </returnStatement>
      </statements>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword> method </keyword>
    <keyword> void </keyword>
    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> decSize </identifier>
    <symbol> ( </symbol>
    <parameterList>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <statements>
        <ifStatement>
          <keyword> if </keyword>
          <symbol> ( </symbol>
          <expression>
            <term>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
            </term>
            <symbol> &gt; </symbol>
            <term>
              <integerConstant> 2 </integerConstant>
            </term>
          </expression>
          <symbol> ) </symbol>
          <symbol> { </symbol>
          <statements>
            <doStatement>
              <keyword> do </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> erase </identifier>
              <symbol> ( </symbol>
              <expressionList>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
            <letStatement>
              <keyword> let </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
              <symbol> = </symbol>
              <expression>
                <term>
                  <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                </term>
                <symbol> - </symbol>
                <term>
                  <integerConstant> 2 </integerConstant>
                </term>
              </expression>
              <symbol> ; </symbol>
            </letStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> draw </identifier>
              <symbol> ( </symbol>
              <expressionList>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
          </statements>
          <symbol> } </symbol>
        </ifStatement>
        <returnStatement>
          <keyword> return </keyword>
          <symbol> ; </symbol>
        </returnStatement>
      </statements>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword> method </keyword>
    <keyword> void </keyword>
    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> moveUp </identifier>
    <symbol> ( </symbol>
    <parameterList>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <statements>
        <ifStatement>
          <keyword> if </keyword>
          <symbol> ( </symbol>
          <expression>
            <term>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
            </term>
            <symbol> &gt; </symbol>
            <term>
              <integerConstant> 1 </integerConstant>
            </term>
          </expression>
          <symbol> ) </symbol>
          <symbol> { </symbol>
          <statements>
            <doStatement>
              <keyword> do </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Screen </identifier>
              <symbol> . </symbol>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> setColor </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword> false </keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Screen </identifier>
              <symbol> . </symbol>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> drawRectangle </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <symbol> ( </symbol>
                    <expression>
                      <term>
                        <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
                      </term>
                      <symbol> + </symbol>
                      <term>
                        <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                      </term>
                    </expression>
                    <symbol> ) </symbol>
                  </term>
                  <symbol> - </symbol>
                  <term>
                    <integerConstant> 1 </integerConstant>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
            <letStatement>
              <keyword> let </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
              <symbol> = </symbol>
              <expression>
                <term>
                  <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
                </term>
                <symbol> - </symbol>
                <term>
                  <integerConstant> 2 </integerConstant>
                </term>
              </expression>
              <symbol> ; </symbol>
            </letStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Screen </identifier>
              <symbol> . </symbol>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> setColor </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword> true </keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Screen </identifier>
              <symbol> . </symbol>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> drawRectangle </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <integerConstant> 1 </integerConstant>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
          </statements>
          <symbol> } </symbol>
        </ifStatement>
        <returnStatement>
          <keyword> return </keyword>
          <symbol> ; </symbol>
        </returnStatement>
      </statements>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword> method </keyword>
    <keyword> void </keyword>
    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> moveDown </identifier>
    <symbol> ( </symbol>
    <parameterList>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <statements>
        <ifStatement>
          <keyword> if </keyword>
          <symbol> ( </symbol>
          <expression>
            <term>
              <symbol> ( </symbol>
              <expression>
                <term>
                  <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
                </term>
                <symbol> + </symbol>
                <term>
                  <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                </term>
              </expression>
              <symbol> ) </symbol>
            </term>
            <symbol> &lt; </symbol>
            <term>
              <integerConstant> 254 </integerConstant>
            </term>
          </expression>
          <symbol> ) </symbol>
          <symbol> { </symbol>
          <statements>
            <doStatement>
              <keyword> do </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Screen </identifier>
              <symbol> . </symbol>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> setColor </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword> false </keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Screen </identifier>
              <symbol> . </symbol>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> drawRectangle </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <integerConstant> 1 </integerConstant>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
            <letStatement>
              <keyword> let </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
              <symbol> = </symbol>
              <expression>
                <term>
                  <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
                </term>
                <symbol> + </symbol>
                <term>
                  <integerConstant> 2 </integerConstant>
                </term>
              </expression>
              <symbol> ; </symbol>
            </letStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Screen </identifier>
              <symbol> . </symbol>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> setColor </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword> true </keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Screen </identifier>
              <symbol> . </symbol>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> drawRectangle </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <symbol> ( </symbol>
                    <expression>
                      <term>
                        <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
                      </term>
                      <symbol> + </symbol>
                      <term>
                        <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                      </term>
                    </expression>
                    <symbol> ) </symbol>
                  </term>
                  <symbol> - </symbol>
                  <term>
                    <integerConstant> 1 </integerConstant>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
          </statements>
          <symbol> } </symbol>
        </ifStatement>
        <returnStatement>
          <keyword> return </keyword>
          <symbol> ; </symbol>
        </returnStatement>
      </statements>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword> method </keyword>
    <keyword> void </keyword>
    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> moveLeft </identifier>
    <symbol> ( </symbol>
    <parameterList>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <statements>
        <ifStatement>
          <keyword> if </keyword>
          <symbol> ( </symbol>
          <expression>
            <term>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
            </term>
            <symbol> &gt; </symbol>
            <term>
              <integerConstant> 1 </integerConstant>
            </term>
          </expression>
          <symbol> ) </symbol>
          <symbol> { </symbol>
          <statements>
            <doStatement>
              <keyword> do </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Screen </identifier>
              <symbol> . </symbol>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> setColor </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword> false </keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Screen </identifier>
              <symbol> . </symbol>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> drawRectangle </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <symbol> ( </symbol>
                    <expression>
                      <term>
                        <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
                      </term>
                      <symbol> + </symbol>
                      <term>
                        <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                      </term>
                    </expression>
                    <symbol> ) </symbol>
                  </term>
                  <symbol> - </symbol>
                  <term>
                    <integerConstant> 1 </integerConstant>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
            <letStatement>
              <keyword> let </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
              <symbol> = </symbol>
              <expression>
                <term>
                  <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
                </term>
                <symbol> - </symbol>
                <term>
                  <integerConstant> 2 </integerConstant>
                </term>
              </expression>
              <symbol> ; </symbol>
            </letStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Screen </identifier>
              <symbol> . </symbol>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> setColor </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword> true </keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Screen </identifier>
              <symbol> . </symbol>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> drawRectangle </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <integerConstant> 1 </integerConstant>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
          </statements>
          <symbol> } </symbol>
        </ifStatement>
        <returnStatement>
          <keyword> return </keyword>
          <symbol> ; </symbol>
        </returnStatement>
      </statements>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword> method </keyword>
    <keyword> void </keyword>
    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> moveRight </identifier>
    <symbol> ( </symbol>
    <parameterList>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <statements>
        <ifStatement>
          <keyword> if </keyword>
          <symbol> ( </symbol>
          <expression>
            <term>
              <symbol> ( </symbol>
              <expression>
                <term>
                  <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
                </term>
                <symbol> + </symbol>
                <term>
                  <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                </term>
              </expression>
              <symbol> ) </symbol>
            </term>
            <symbol> &lt; </symbol>
            <term>
              <integerConstant> 510 </integerConstant>
            </term>
          </expression>
          <symbol> ) </symbol>
          <symbol> { </symbol>
          <statements>
            <doStatement>
              <keyword> do </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Screen </identifier>
              <symbol> . </symbol>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> setColor </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword> false </keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Screen </identifier>
              <symbol> . </symbol>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> drawRectangle </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <integerConstant> 1 </integerConstant>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
            <letStatement>
              <keyword> let </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
              <symbol> = </symbol>
              <expression>
                <term>
                  <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
                </term>
                <symbol> + </symbol>
                <term>
                  <integerConstant> 2 </integerConstant>
                </term>
              </expression>
              <symbol> ; </symbol>
            </letStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Screen </identifier>
              <symbol> . </symbol>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> setColor </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword> true </keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> Screen </identifier>
              <symbol> . </symbol>
              <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> drawRectangle </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <symbol> ( </symbol>
                    <expression>
                      <term>
                        <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
                      </term>
                      <symbol> + </symbol>
                      <term>
                        <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                      </term>
                    </expression>
                    <symbol> ) </symbol>
                  </term>
                  <symbol> - </symbol>
                  <term>
                    <integerConstant> 1 </integerConstant>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> x </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> y </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <identifier type='IdentifierType.VARIABLE' is_def='False' category='None' index='None'> size </identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
          </statements>
          <symbol> } </symbol>
        </ifStatement>
        <returnStatement>
          <keyword> return </keyword>
          <symbol> ; </symbol>
        </returnStatement>
      </statements>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <symbol> } </symbol>
</class>
